geom_sf(data = mexico_state, fill = NA, color = "purple3") +
geom_sf(size = 3, aes(color = MaternalLine, shape = MaternalLine)) +
scale_shape_manual(1:8)
p <- ggplot(data = st_as_sf(dataset_merge_maia_fix, coords = c("Longitude", "Latitude"), agr = "constant", crs = 4326)) +
geom_sf(data = usa_state, fill = "thistle1", color = "darkgreen") +
geom_sf(data = canada_state, fill = "lightgreen", color = "hotpink") +
geom_sf(data = mexico_state, fill = NA, color = "purple3") +
geom_sf(size = 3, aes(color = MaternalLine, shape = MaternalLine)) +
scale_shape_manual(1:8) +
xlab("") +
ylab("") +
theme_bw() +
theme(legend.position = "bottom", legend.box = "vertical", panel.grid = element_blank()) +
coord_sf(ylim = c(4e6, 5e6), xlim = c(-10.5e6,-9e6), expand = FALSE, crs = 3857)
# Print the plot
print(p)
p <- ggplot(data = st_as_sf(dataset_merge_maia_fix, coords = c("Longitude", "Latitude"), agr = "constant", crs = 4326)) +
geom_sf(data = usa_state, fill = "thistle1", color = "darkgreen") +
geom_sf(data = canada_state, fill = "lightgreen", color = "hotpink") +
geom_sf(data = mexico_state, fill = NA, color = "purple3") +
geom_sf(size = 3, aes(color = MaternalLine, shape = MaternalLine)) +
scale_shape_manual(values = 1:8) +
xlab("") +
ylab("") +
theme_bw() +
theme(legend.position = "bottom", legend.box = "vertical", panel.grid = element_blank()) +
coord_sf(ylim = c(4e6, 5e6), xlim = c(-10.5e6,-9e6), expand = FALSE, crs = 3857)
# Print the plot
print(p)
p <- ggplot(data = st_as_sf(dataset_merge_maia_fix, coords = c("Longitude", "Latitude"), agr = "constant", crs = 4326)) +
geom_sf(data = usa_state, fill = "thistle1", color = "darkgreen") +
geom_sf(data = canada_state, fill = "lightgreen", color = "hotpink") +
geom_sf(data = mexico_state, fill = NA, color = "purple3") +
geom_sf(size = 3, aes(color = MaternalLine, shape = MaternalLine)) +
scale_shape_manual(values = 1:8) +
xlab("") +
ylab("") +
theme_bw() +
theme(legend.position = "bottom", legend.box = "vertical", panel.grid = element_blank()) +
coord_sf(ylim = c(4e6, 5e6), xlim = c(-10.5e6,-9e6), expand = FALSE, crs = 3857)
# Print the plot
print(p)
ggsave("./figures/phy_map_maia_thistle_shape.png", width = 10, height = 8, dpi = 600)
p <- ggplot(data = st_as_sf(dataset_merge_maia_fix, coords = c("Longitude", "Latitude"), agr = "constant", crs = 4326)) +
geom_sf(data = usa_state, fill = "thistle1", color = "darkgreen") +
geom_sf(data = canada_state, fill = "lightgreen", color = "hotpink") +
geom_sf(data = mexico_state, fill = NA, color = "purple3") +
geom_sf(size = 3, aes(color = County, shape = County)) +
scale_shape_manual(values = 1:8) +
xlab("") +
ylab("") +
theme_bw() +
theme(legend.position = "bottom", legend.box = "vertical", panel.grid = element_blank()) +
coord_sf(ylim = c(4e6, 5e6), xlim = c(-10.5e6,-9e6), expand = FALSE, crs = 3857)
# Print the plot
print(p)
p <- ggplot(data = st_as_sf(dataset_merge_maia_fix, coords = c("Longitude", "Latitude"), agr = "constant", crs = 4326)) +
geom_sf(data = usa_state, fill = "thistle1", color = "darkgreen") +
geom_sf(data = canada_state, fill = "lightgreen", color = "hotpink") +
geom_sf(data = mexico_state, fill = NA, color = "purple3") +
geom_sf(size = 3, aes(color = State, shape = State)) +
scale_shape_manual(values = 1:8) +
xlab("") +
ylab("") +
theme_bw() +
theme(legend.position = "bottom", legend.box = "vertical", panel.grid = element_blank()) +
coord_sf(ylim = c(4e6, 5e6), xlim = c(-10.5e6,-9e6), expand = FALSE, crs = 3857)
# Print the plot
print(p)
p <- ggplot(data = st_as_sf(dataset_merge_maia_fix, coords = c("Longitude", "Latitude"), agr = "constant", crs = 4326)) +
geom_sf(data = usa_state, fill = "thistle1", color = "darkgreen") +
geom_sf(data = canada_state, fill = "lightgreen", color = "hotpink") +
geom_sf(data = mexico_state, fill = NA, color = "purple3") +
geom_sf(size = 4, aes(color = County, shape = County)) +
scale_shape_manual(values = 1:8) +
xlab("") +
ylab("") +
theme_bw() +
theme(legend.position = "bottom", legend.box = "vertical", panel.grid = element_blank()) +
coord_sf(ylim = c(4e6, 5e6), xlim = c(-10.5e6,-9e6), expand = FALSE, crs = 3857)
# Print the plot
print(p)
ggsave("./figures/phy_map_maia_county.png", width = 10, height = 8, dpi = 600)
library(readr)
dataset_merge_maia_fix <- read_csv("data/dataset_merge_maia_fix.csv")
View(dataset_merge_maia_fix)
date_info <- dataset_merge_maia_fix %>%
select(str_c("Date.", 1:15))%>% # add something
.[1,]%>%
pivot_longer(cols = starts_with("Date"), names_to = "Date_index", values_to = "Date")%>%
mutate(Date_index = str_remove(Date_index, "Date."))%>%
mutate(Date = str_replace(Date, pattern = "/24$", replacement = "/2024"))
library(dplyr)
library(dplyr)
library(readr)
dataset_merge_maia_fix <- read_csv("data/dataset_merge_maia_fix.csv")
View(dataset_merge_maia_fix)
date_info <- phy_data %>%
select(str_c("Date.", 1:15))%>% # add something
.[1,]%>%
pivot_longer(cols = starts_with("Date"), names_to = "Date_index", values_to = "Date")%>%
mutate(Date_index = str_remove(Date_index, "Date."))%>%
mutate(Date = str_replace(Date, pattern = "/24$", replacement = "/2024"))
library(dplyr)
library(tidyverse)
library(readr)
dataset_merge_maia_fix <- read_csv("data/dataset_merge_maia_fix.csv")
View(dataset_merge_maia_fix)
date_info <- dataset_merge_maia_fix %>%
select(str_c("Date.", 1:15))%>% # add something
.[1,]%>%
pivot_longer(cols = starts_with("Date"), names_to = "Date_index", values_to = "Date")%>%
mutate(Date_index = str_remove(Date_index, "Date."))%>%
mutate(Date = str_replace(Date, pattern = "/24$", replacement = "/2024"))
phy_data <- as.tibble(dataset_merge_maia_fix)
phy_data <- as_tibble(dataset_merge_maia_fix)
date_info <- dataset_merge_maia_fix %>%
select(str_c("Date.", 1:15))%>% # add something
.[1,]%>%
pivot_longer(cols = starts_with("Date"), names_to = "Date_index", values_to = "Date")%>%
mutate(Date_index = str_remove(Date_index, "Date."))%>%
mutate(Date = str_replace(Date, pattern = "/24$", replacement = "/2024"))
date_info <- phy_data %>%
select(str_c("Date.", 1:15))%>% # add something
.[1,]%>%
pivot_longer(cols = starts_with("Date"), names_to = "Date_index", values_to = "Date")%>%
mutate(Date_index = str_remove(Date_index, "Date."))%>%
mutate(Date = str_replace(Date, pattern = "/24$", replacement = "/2024"))
library(dplyr)
library(tidyverse)
library(readr)
dataset_merge_maia_fix <- read_csv("data/dataset_merge_maia_fix.csv")
View(dataset_merge_maia_fix)
phy_data <- as_tibble(dataset_merge_maia_fix)
view(phy_data)
date_info <- phy_data %>%
select(str_c("Date.", 1:15))%>% # add something
.[1,]%>%
pivot_longer(cols = starts_with("Date"), names_to = "Date_index", values_to = "Date")%>%
mutate(Date_index = str_remove(Date_index, "Date."))%>%
mutate(Date = str_replace(Date, pattern = "/24$", replacement = "/2024"))
date_info <- phy_data %>%
dplyr::select(str_c("Date.", 1:15))%>% # add something
.[1,]%>%
pivot_longer(cols = starts_with("Date"), names_to = "Date_index", values_to = "Date")%>%
mutate(Date_index = str_remove(Date_index, "Date."))%>%
mutate(Date = str_replace(Date, pattern = "/24$", replacement = "/2024"))
View(date_info)
phy_data_l <- phy_data %>%
starts_with("stemDia"), starts_with("stemLength"), starts_with("numLeaf"), starts_with("flwrBud"), starts_with("flwrOpen"), starts_with("fruitPres"),
phy_data_l <- phy_data %>%
phy_data_l <- phy_data %>%
mutate_at(vars(matches("leafLong")),.funs = "as.double") %>%
mutate_at(vars(matches("Surv")),.funs = "as.double") %>%
mutate_at(vars(matches("numStem")),.funs = "as.double") %>%
mutate_at(vars(matches("stemLength")),.funs = "as.double") %>%
mutate_at(vars(matches("flwrBud")),.funs = "as.double") %>%
mutate_at(vars(matches("fruitPres")),.funs = "as.double") %>%
separate(col = "name", into = c("variable_name", "Date_index"), sep = "[.]")%>%
mutate(Date = as.Date(Date, "%m/%d/%Y"))%>%
mutate(values = correct_stem(values))
library(dplyr)
library(tidyverse)
library(readr)
dataset_merge_maia_fix <- read_csv("data/dataset_merge_maia_fix.csv")
View(dataset_merge_maia_fix)
phy_data <- as_tibble(dataset_merge_maia_fix)
view(phy_data)
date_info <- phy_data %>%
select(str_c("Date.", 1:15))%>% # add something
.[1,]%>%
pivot_longer(cols = starts_with("Date"), names_to = "Date_index", values_to = "Date")%>%
mutate(Date_index = str_remove(Date_index, "Date."))%>%
mutate(Date = str_replace(Date, pattern = "/24$", replacement = "/2024"))
phy_data_l <- phy_data %>%
mutate_at(vars(matches("leafLong")),.funs = "as.double") %>%
mutate_at(vars(matches("Surv")),.funs = "as.double") %>%
mutate_at(vars(matches("numStem")),.funs = "as.double") %>%
mutate_at(vars(matches("stemLength")),.funs = "as.double") %>%
mutate_at(vars(matches("flwrBud")),.funs = "as.double") %>%
mutate_at(vars(matches("fruitPres")),.funs = "as.double") %>%
separate(col = "name", into = c("variable_name", "Date_index"), sep = "[.]")%>%
mutate(Date = as.Date(Date, "%m/%d/%Y"))%>%
mutate(values = correct_stem(values))
phy_data_l <- phy_data %>%
# Select the columns needed
select(label, index,
starts_with("leafLong"), starts_with("leafWide"), starts_with("Surv"),
starts_with("numRos"), starts_with("numStem"), starts_with("stemDia"),
starts_with("stemLength"), starts_with("numLeaf"), starts_with("flwrBud"),
starts_with("flwrOpen"), starts_with("fruitPres"), starts_with("fruitDeh"),
starts_with("numFlowerStem")) %>%
# Convert selected columns to double
mutate(across(contains(c("leafLong", "leafWide", "Surv", "numRos", "numStem",
"stemDia", "stemLength", "numLeaf", "flwrBud", "flwrOpen",
"fruitPres", "fruitDeh", "numFlowerStem")), as.double)) %>%
# Pivot the data from wide to long format
pivot_longer(cols = c(starts_with("leafLong"), starts_with("leafWide"),
starts_with("Surv"), starts_with("numRos"), starts_with("numStem"),
starts_with("stemDia"), starts_with("stemLength"),
starts_with("numLeaf"), starts_with("flwrBud"),
starts_with("flwrOpen"), starts_with("fruitPres"),
starts_with("fruitDeh"), starts_with("numFlowerStem")),
names_to = c("variable_name", "Date_index"),
names_sep = "[.]",
values_to = "values") %>%
# Join with date_info to get date
left_join(date_info, by = "Date_index") %>%
# Convert the date column to Date format
mutate(Date = as.Date(Date, format = "%m/%d/%Y")) %>%
# Group by the necessary variables
group_by(label, index, variable_name) %>%
# Apply the correct_stem function to the values
mutate(values = correct_stem(values))
library(dplyr)
library(tidyverse)
library(readr)
dataset_merge_maia_fix <- read_csv("data/dataset_merge_maia_fix.csv")
View(dataset_merge_maia_fix)
phy_data <- as_tibble(dataset_merge_maia_fix)
view(phy_data)
date_info <- phy_data %>%
select(str_c("Date.", 1:15))%>% # add something
.[1,]%>%
pivot_longer(cols = starts_with("Date"), names_to = "Date_index", values_to = "Date")%>%
mutate(Date_index = str_remove(Date_index, "Date."))%>%
mutate(Date = str_replace(Date, pattern = "/24$", replacement = "/2024"))
phy_data_l <- phy_data %>%
# Select the columns needed
select(label, index,
starts_with("leafLong"), starts_with("leafWide"), starts_with("Surv"),
starts_with("numRos"), starts_with("numStem"), starts_with("stemDia"),
starts_with("stemLength"), starts_with("numLeaf"), starts_with("flwrBud"),
starts_with("flwrOpen"), starts_with("fruitPres"), starts_with("fruitDeh"),
starts_with("numFlowerStem")) %>%
# Convert selected columns to double
mutate(across(contains(c("leafLong", "leafWide", "Surv", "numRos", "numStem",
"stemDia", "stemLength", "numLeaf", "flwrBud", "flwrOpen",
"fruitPres", "fruitDeh", "numFlowerStem")), as.double)) %>%
# Pivot the data from wide to long format
pivot_longer(cols = c(starts_with("leafLong"), starts_with("leafWide"),
starts_with("Surv"), starts_with("numRos"), starts_with("numStem"),
starts_with("stemDia"), starts_with("stemLength"),
starts_with("numLeaf"), starts_with("flwrBud"),
starts_with("flwrOpen"), starts_with("fruitPres"),
starts_with("fruitDeh"), starts_with("numFlowerStem")),
names_to = c("variable_name", "Date_index"),
names_sep = "[.]",
values_to = "values") %>%
# Join with date_info to get date
left_join(date_info, by = "Date_index") %>%
# Convert the date column to Date format
mutate(Date = as.Date(Date, format = "%m/%d/%Y")) %>%
# Group by the necessary variables
group_by(label, index, variable_name) %>%
# Apply the correct_stem function to the values
mutate(values = correct_stem(values))
phy_data_l <- phy_data %>%
# Select the columns needed
select(TemporaryID, RanIndex,
starts_with("leafLong"), starts_with("leafWide"), starts_with("Surv"),
starts_with("numRos"), starts_with("numStem"), starts_with("stemDia"),
starts_with("stemLength"), starts_with("numLeaf"), starts_with("flwrBud"),
starts_with("flwrOpen"), starts_with("fruitPres"), starts_with("fruitDeh"),
starts_with("numFlowerStem")) %>%
# Convert selected columns to double
mutate(across(contains(c("leafLong", "leafWide", "Surv", "numRos", "numStem",
"stemDia", "stemLength", "numLeaf", "flwrBud", "flwrOpen",
"fruitPres", "fruitDeh", "numFlowerStem")), as.double)) %>%
# Pivot the data from wide to long format
pivot_longer(cols = c(starts_with("leafLong"), starts_with("leafWide"),
starts_with("Surv"), starts_with("numRos"), starts_with("numStem"),
starts_with("stemDia"), starts_with("stemLength"),
starts_with("numLeaf"), starts_with("flwrBud"),
starts_with("flwrOpen"), starts_with("fruitPres"),
starts_with("fruitDeh"), starts_with("numFlowerStem")),
names_to = c("variable_name", "Date_index"),
names_sep = "[.]",
values_to = "values") %>%
# Join with date_info to get date
left_join(date_info, by = "Date_index") %>%
# Convert the date column to Date format
mutate(Date = as.Date(Date, format = "%m/%d/%Y")) %>%
# Group by the necessary variables
group_by(label, index, variable_name) %>%
# Apply the correct_stem function to the values
mutate(values = correct_stem(values))
phy_data_l <- phy_data %>%
# Select the columns needed
select(TemporaryID, RanIndex,
starts_with("leafLong"), starts_with("leafWide"), starts_with("Surv"),
starts_with("numRos"), starts_with("numStem"), starts_with("stemDia"),
starts_with("stemLength"), starts_with("numLeaf"), starts_with("flwrBud"),
starts_with("flwrOpen"), starts_with("fruitPres"), starts_with("fruitDeh"),
starts_with("numFlowerStem")) %>%
# Convert selected columns to double
mutate(across(contains(c("leafLong", "leafWide", "Surv", "numRos", "numStem",
"stemDia", "stemLength", "numLeaf", "flwrBud", "flwrOpen",
"fruitPres", "fruitDeh", "numFlowerStem")), as.double)) %>%
# Pivot the data from wide to long format
pivot_longer(cols = c(starts_with("leafLong"), starts_with("leafWide"),
starts_with("Surv"), starts_with("numRos"), starts_with("numStem"),
starts_with("stemDia"), starts_with("stemLength"),
starts_with("numLeaf"), starts_with("flwrBud"),
starts_with("flwrOpen"), starts_with("fruitPres"),
starts_with("fruitDeh"), starts_with("numFlowerStem")),
names_to = c("variable_name", "Date_index"),
names_sep = "[.]",
values_to = "values") %>%
# Join with date_info to get date
left_join(date_info, by = "Date_index") %>%
# Convert the date column to Date format
mutate(Date = as.Date(Date, format = "%m/%d/%Y")) %>%
# Group by the necessary variables
group_by(TemporaryID, RanIndex, variable_name) %>%
# Apply the correct_stem function to the values
mutate(values = correct_stem(values))
phy_data_l <- phy_data %>%
# Select the columns needed
select(TemporaryID, RanIndex,
starts_with("leafLong"), starts_with("leafWide"), starts_with("Surv"),
starts_with("numRos"), starts_with("numStem"), starts_with("stemDia"),
starts_with("stemLength"), starts_with("numLeaf"), starts_with("flwrBud"),
starts_with("flwrOpen"), starts_with("fruitPres"), starts_with("fruitDeh"),
starts_with("numFlowerStem")) %>%
# Convert selected columns to double
mutate(across(contains(c("leafLong", "leafWide", "Surv", "numRos", "numStem",
"stemDia", "stemLength", "numLeaf", "flwrBud", "flwrOpen",
"fruitPres", "fruitDeh", "numFlowerStem")), as.double)) %>%
# Pivot the data from wide to long format
pivot_longer(cols = c(starts_with("leafLong"), starts_with("leafWide"),
starts_with("Surv"), starts_with("numRos"), starts_with("numStem"),
starts_with("stemDia"), starts_with("stemLength"),
starts_with("numLeaf"), starts_with("flwrBud"),
starts_with("flwrOpen"), starts_with("fruitPres"),
starts_with("fruitDeh"), starts_with("numFlowerStem")),
names_to = c("variable_name", "Date_index"),
names_sep = "[.]",
values_to = "values") %>%
# Join with date_info to get date
left_join(date_info, by = "Date_index") %>%
# Convert the date column to Date format
mutate(Date = as.Date(Date, format = "%m/%d/%Y")) %>%
# Group by the necessary variables
group_by(TemporaryID, RanIndex, variable_name) %>%
# Print the result
print(phy_data_l)
phy_data_l <- phy_data %>%
# Select the columns needed
select(TemporaryID, RanIndex,
starts_with("leafLong"), starts_with("leafWide"), starts_with("Surv"),
starts_with("numRos"), starts_with("numStem"), starts_with("stemDia"),
starts_with("stemLength"), starts_with("numLeaf"), starts_with("flwrBud"),
starts_with("flwrOpen"), starts_with("fruitPres"), starts_with("fruitDeh"),
starts_with("numFlowerStem")) %>%
# Convert selected columns to double
mutate(across(contains(c("leafLong", "leafWide", "Surv", "numRos", "numStem",
"stemDia", "stemLength", "numLeaf", "flwrBud", "flwrOpen",
"fruitPres", "fruitDeh", "numFlowerStem")), as.double)) %>%
# Pivot the data from wide to long format
pivot_longer(cols = c(starts_with("leafLong"), starts_with("leafWide"),
starts_with("Surv"), starts_with("numRos"), starts_with("numStem"),
starts_with("stemDia"), starts_with("stemLength"),
starts_with("numLeaf"), starts_with("flwrBud"),
starts_with("flwrOpen"), starts_with("fruitPres"),
starts_with("fruitDeh"), starts_with("numFlowerStem")),
names_to = c("variable_name", "Date_index"),
names_sep = "[.]",
values_to = "values") %>%
# Join with date_info to get date
left_join(date_info, by = "Date_index") %>%
# Convert the date column to Date format
mutate(Date = as.Date(Date, format = "%m/%d/%Y")) %>%
# Group by the necessary variables
group_by(TemporaryID, RanIndex, variable_name) %>%
# Print the result
print(phy_data_l)
dplyr::last_dplyr_warnings()
phy_data_l <- phy_data %>%
# Select the columns needed
select(TemporaryID, RanIndex,
starts_with("leafLong"), starts_with("leafWide"), starts_with("Surv"),
starts_with("numRos"), starts_with("numStem"), starts_with("stemDia"),
starts_with("stemLength"), starts_with("numLeaf"), starts_with("flwrBud"),
starts_with("flwrOpen"), starts_with("fruitPres"), starts_with("fruitDeh"),
starts_with("numFlowerStem")) %>%
# Convert selected columns to double
mutate(across(contains(c("leafLong", "leafWide", "Surv", "numRos", "numStem",
"stemDia", "stemLength", "numLeaf", "flwrBud", "flwrOpen",
"fruitPres", "fruitDeh", "numFlowerStem")), as.double)) %>%
# Pivot the data from wide to long format
pivot_longer(cols = c(starts_with("leafLong"), starts_with("leafWide"),
starts_with("Surv"), starts_with("numRos"), starts_with("numStem"),
starts_with("stemDia"), starts_with("stemLength"),
starts_with("numLeaf"), starts_with("flwrBud"),
starts_with("flwrOpen"), starts_with("fruitPres"),
starts_with("fruitDeh"), starts_with("numFlowerStem")),
names_to = c("variable_name", "Date_index"),
names_sep = "[.]",
values_to = "values") %>%
# Join with date_info to get date
left_join(date_info, by = "Date_index") %>%
# Convert the date column to Date format
mutate(Date = as.Date(Date, format = "%m/%d/%Y")) %>%
# Group by the necessary variables
group_by(TemporaryID, RanIndex, variable_name) %>%
# Print the result
print(phy_data_l)
phy_data_l <- phy_data %>%
# Select the columns needed
select(TemporaryID, RanIndex,
starts_with("leafLong"), starts_with("leafWide"), starts_with("Surv"),
starts_with("numRos"), starts_with("numStem"), starts_with("stemDia"),
starts_with("stemLength"), starts_with("numLeaf"), starts_with("flwrBud"),
starts_with("flwrOpen"), starts_with("fruitPres"), starts_with("fruitDeh"),
starts_with("numFlowerStem")) %>%
# Convert selected columns to double
mutate(across(contains(c("leafLong", "leafWide", "Surv", "numRos", "numStem",
"stemDia", "stemLength", "numLeaf", "flwrBud", "flwrOpen",
"fruitPres", "fruitDeh", "numFlowerStem")), as.double)) %>%
# Pivot the data from wide to long format
pivot_longer(cols = c(starts_with("leafLong"), starts_with("leafWide"),
starts_with("Surv"), starts_with("numRos"), starts_with("numStem"),
starts_with("stemDia"), starts_with("stemLength"),
starts_with("numLeaf"), starts_with("flwrBud"),
starts_with("flwrOpen"), starts_with("fruitPres"),
starts_with("fruitDeh"), starts_with("numFlowerStem")),
names_to = c("variable_name", "Date_index"),
names_sep = "[.]",
values_to = "values") %>%
# Join with date_info to get date
left_join(date_info, by = "Date_index") %>%
# Convert the date column to Date format
mutate(Date = as.Date(Date, format = "%m/%d/%Y")) %>%
# Group by the necessary variables
group_by(TemporaryID, RanIndex, variable_name)
# Print the result
print(phy_data_l)
View(phy_data_l)
phy_data_l <- phy_data %>%
# Select the columns needed
select(TemporaryID, RanIndex,
starts_with("leafLong"), starts_with("leafWide"),
starts_with("numRos"), starts_with("numStem"), starts_with("stemDia"),
starts_with("stemLength"), starts_with("numLeaf"), starts_with("flwrBud"),
starts_with("flwrOpen"), starts_with("fruitPres"), starts_with("fruitDeh"),
starts_with("numFlowerStem")) %>%
# Convert selected columns to double
mutate(across(contains(c("leafLong", "leafWide", "numRos", "numStem",
"stemDia", "stemLength", "numLeaf", "flwrBud", "flwrOpen",
"fruitPres", "fruitDeh", "numFlowerStem")), as.double)) %>%
# Pivot the data from wide to long format
pivot_longer(cols = c(starts_with("leafLong"), starts_with("leafWide"),
starts_with("Surv"), starts_with("numRos"), starts_with("numStem"),
starts_with("stemDia"), starts_with("stemLength"),
starts_with("numLeaf"), starts_with("flwrBud"),
starts_with("flwrOpen"), starts_with("fruitPres"),
starts_with("fruitDeh"), starts_with("numFlowerStem")),
names_to = c("variable_name", "Date_index"),
names_sep = "[.]",
values_to = "values") %>%
# Join with date_info to get date
left_join(date_info, by = "Date_index") %>%
# Convert the date column to Date format
mutate(Date = as.Date(Date, format = "%m/%d/%Y")) %>%
# Group by the necessary variables
group_by(TemporaryID, RanIndex, variable_name)
# Print the result
print(phy_data_l)
library(dplyr)
library(tidyverse)
library(readr)
dataset_merge_maia_fix <- read_csv("data/dataset_merge_maia_fix.csv")
View(dataset_merge_maia_fix)
phy_data <- as_tibble(dataset_merge_maia_fix)
view(phy_data)
date_info <- phy_data %>%
select(str_c("Date.", 1:15))%>% # add something
.[1,]%>%
pivot_longer(cols = starts_with("Date"), names_to = "Date_index", values_to = "Date")%>%
mutate(Date_index = str_remove(Date_index, "Date."))%>%
mutate(Date = str_replace(Date, pattern = "/24$", replacement = "/2024"))
phy_data_l <- phy_data %>%
# Select the columns needed
select(TemporaryID, RanIndex,
starts_with("leafLong"), starts_with("leafWide"),
starts_with("numRos"), starts_with("numStem"), starts_with("stemDia"),
starts_with("stemLength"), starts_with("numLeaf"), starts_with("flwrBud"),
starts_with("flwrOpen"), starts_with("fruitPres"), starts_with("fruitDeh"),
starts_with("numFlowerStem")) %>%
# Convert selected columns to double
mutate(across(contains(c("leafLong", "leafWide", "numRos", "numStem",
"stemDia", "stemLength", "numLeaf", "flwrBud", "flwrOpen",
"fruitPres", "fruitDeh", "numFlowerStem")), as.double)) %>%
# Pivot the data from wide to long format
pivot_longer(cols = c(starts_with("leafLong"), starts_with("leafWide"),
starts_with("Surv"), starts_with("numRos"), starts_with("numStem"),
starts_with("stemDia"), starts_with("stemLength"),
starts_with("numLeaf"), starts_with("flwrBud"),
starts_with("flwrOpen"), starts_with("fruitPres"),
starts_with("fruitDeh"), starts_with("numFlowerStem")),
names_to = c("variable_name", "Date_index"),
names_sep = "[.]",
values_to = "values") %>%
# Join with date_info to get date
left_join(date_info, by = "Date_index") %>%
# Convert the date column to Date format
mutate(Date = as.Date(Date, format = "%m/%d/%Y")) %>%
# Group by the necessary variables
group_by(TemporaryID, RanIndex, variable_name)
# Print the result
print(phy_data_l)
