str_split_1(colnames(Physaria_MergedData), "[.]")
str_split(colnames(Physaria_MergedData), "[.]")
str_split_i(colnames(Physaria_MergedData), "[.]", 1)
unique(str_split_i(colnames(Physaria_MergedData), "[.]", 1))
uni_colnames <- unique(str_split_i(colnames(Physaria_MergedData), "[.]", 1))
vapply(uni_colnames, function(x){select(Physaria_MergedData, matches(x)) %>% str()})
sapply(uni_colnames, function(x){select(Physaria_MergedData, matches(x)) %>% str()})
sapply(uni_colnames, function(x){select(Physaria_MergedData, matches(x)) %>% class()})
sapply(uni_colnames, function(x){select(Physaria_MergedData, matches(x)) %>% attr()})
sapply(uni_colnames, function(x){select(Physaria_MergedData, matches(x)) %>% attributes()})
sapply(uni_colnames, function(x){select(Physaria_MergedData, matches(x)) %>% str()})
uni_colnames <- unique(str_split_i(colnames(Physaria_MergedData), "[.]", 1))
uni_colnames
uni_colnames <- unique(str_split_i(colnames(Physaria_MergedData), "[.]", 1))[16:30]
uni_colnames
sapply(uni_colnames, function(x){select(Physaria_MergedData, matches(x)) %>% str()})
View(Physaria_MergedData)
Physaria_MergedData <- read_csv("./data/Physaria_MergedData_20240703.csv", na = c("", "NA", "N/A"))
colnames(Physaria_MergedData)
str(Physaria_MergedData)
## check data class
# print unique column names
uni_colnames <- unique(str_split_i(colnames(Physaria_MergedData), "[.]", 1))[16:30]
uni_colnames
sapply(uni_colnames, function(x){select(Physaria_MergedData, matches(x)) %>% str()})
Physaria_MergedData$stemDia.1
Physaria_MergedData <- read_csv("./data/Physaria_MergedData_20240703.csv", na = c("", "NA", "N/A", "DNR"))
colnames(Physaria_MergedData)
str(Physaria_MergedData)
## check data class
# print unique column names
uni_colnames <- unique(str_split_i(colnames(Physaria_MergedData), "[.]", 1))[16:30]
uni_colnames
sapply(uni_colnames, function(x){select(Physaria_MergedData, matches(x)) %>% str()})
Physaria_MergedData$stemDia.1
Physaria_MergedData <- read_csv("./data/Physaria_MergedData_20240703.csv", na = c("", "NA", "N/A", "DNR"))
Physaria_MergedData[347, "stemDia.1"] <- "1.13"
colnames(Physaria_MergedData)
str(Physaria_MergedData)
## check data class
# print unique column names
uni_colnames <- unique(str_split_i(colnames(Physaria_MergedData), "[.]", 1))[16:30]
uni_colnames
sapply(uni_colnames, function(x){select(Physaria_MergedData, matches(x)) %>% str()})
Physaria_MergedData$stemDia.1
setwd("/Users/kuowenhsi/Library/CloudStorage/OneDrive-WashingtonUniversityinSt.Louis/MOBOT/MOBOT_Physaria")
Physaria_MergedData <- read_csv("./data/Physaria_MergedData_20240703.csv", na = c("", "NA", "N/A", "DNR"))
Physaria_MergedData[347, "stemDia.1"] <- "1.13"
Physaria_MergedData %>% Physaria_MergedData %>%
mutate(stemDia.1 = as.numeric(stemDia.1))
Physaria_MergedData <- read_csv("./data/Physaria_MergedData_20240703.csv", na = c("", "NA", "N/A", "DNR"))
Physaria_MergedData[347, "stemDia.1"] <- "1.13"
Physaria_MergedData <- Physaria_MergedData %>%
mutate(stemDia.1 = as.numeric(stemDia.1))
colnames(Physaria_MergedData)
str(Physaria_MergedData)
## check data class
# print unique column names
uni_colnames <- unique(str_split_i(colnames(Physaria_MergedData), "[.]", 1))[16:30]
uni_colnames
sapply(uni_colnames, function(x){select(Physaria_MergedData, matches(x)) %>% str()})
Physaria_MergedData$stemLength.1
str_split(c("2/3", "4/4"), "/")
str_split(c("2/3", "4 / 4"), "/")
str_split(c("2/3", "4 / 4"), "/")%>% str_remove_all(" ")
sort(c(5,4,2,1))
?sort
choose_big_number <- function(x){
x <- as.character(x)
x_splited <- str_split(str_remove_all(x, " "), "/")
x_big <- lapply(x_splited, function(x){x = as.numeric(x); x = sort(x, decreasing = TRUE); return(x[[1]])})
return(unlist(x_big))
}
choose_big_number("3.8 / 3.4")
choose_big_number(c("3.8 / 3.4", "10"))
Physaria_MergedData$stemLength.1
choose_big_number <- function(x){
x <- as.character(x)
x_splited <- str_split(str_remove_all(x, " "), "/")
x_big <- lapply(x_splited, function(x){x = as.numeric(x); x = sort(x, decreasing = TRUE); return(x[[1]])})
return(unlist(x_big))
}
Physaria_MergedData <- read_csv("./data/Physaria_MergedData_20240703.csv", na = c("", "NA", "N/A", "DNR"))%>%
mutate(stemDia.1 = choose_big_number(stemDia.1), stemLength.1 = choose_big_number(stemLength.1))
Physaria_MergedData <- read_csv("./data/Physaria_MergedData_20240703.csv", na = c("", "NA", "N/A", "DNR"))
choose_big_number(Physaria_MergedData$stemDia.1)
c(NA)[[1]]
choose_big_number(Physaria_MergedData$stemDia.1)
choose_big_number(c("21/43", NA))
choose_big_number(c("21/43", 23))
str_split(NA, "/")
sort(NA)
sort(NA, na.last = TRUE)
choose_big_number <- function(x){
x <- as.character(x)
x_splited <- str_split(str_remove_all(x, " "), "/")
x_big <- lapply(x_splited, function(x){x = as.numeric(x); x = sort(x, decreasing = TRUE, na.last = TRUE); return(x[[1]])})
return(unlist(x_big))
}
Physaria_MergedData <- read_csv("./data/Physaria_MergedData_20240703.csv", na = c("", "NA", "N/A", "DNR"))%>%
mutate(stemDia.1 = choose_big_number(stemDia.1), stemLength.1 = choose_big_number(stemLength.1))
colnames(Physaria_MergedData)
str(Physaria_MergedData)
uni_colnames <- unique(str_split_i(colnames(Physaria_MergedData), "[.]", 1))[16:30]
uni_colnames
sapply(uni_colnames, function(x){select(Physaria_MergedData, matches(x)) %>% str()})
convert_Y_one <- function(x){
case_when(x, flwrBud.1 == "Y" ~ 1,
flwrBud.1 == "N" ~ 0,
TRUE ~ as.numeric(NA))
}
Physaria_MergedData <- read_csv("./data/Physaria_MergedData_20240703.csv", na = c("", "NA", "N/A", "DNR"))%>%
mutate(stemDia.1 = choose_big_number(stemDia.1), stemLength.1 = choose_big_number(stemLength.1))%>%
mutate(flwrBud.1 = convert_Y_one(flwrBud.1))
convert_Y_one <- function(x){
case_when(flwrBud.1 == "Y" ~ 1,
flwrBud.1 == "N" ~ 0,
TRUE ~ as.numeric(NA))
}
Physaria_MergedData <- read_csv("./data/Physaria_MergedData_20240703.csv", na = c("", "NA", "N/A", "DNR"))%>%
mutate(stemDia.1 = choose_big_number(stemDia.1), stemLength.1 = choose_big_number(stemLength.1))%>%
mutate(flwrBud.1 = convert_Y_one(flwrBud.1))
?case_when
convert_Y_one <- function(x){
if (flwrBud.1 == "Y") {1}
if (flwrBud.1 == "N") {0}
else {TRUE ~ as.numeric(NA)}
}
Physaria_MergedData <- read_csv("./data/Physaria_MergedData_20240703.csv", na = c("", "NA", "N/A", "DNR"))%>%
mutate(stemDia.1 = choose_big_number(stemDia.1), stemLength.1 = choose_big_number(stemLength.1))%>%
mutate(flwrBud.1 = convert_Y_one(flwrBud.1))
convert_Y_one(c("Y", "N"))
convert_Y_one <- function(x){
if (x == "Y") {1}
if (x == "N") {0}
else {TRUE ~ as.numeric(NA)}
}
convert_Y_one(c("Y", "N"))
convert_Y_one <- function(x){
if (x == "Y") {1}
else if (x == "N") {0}
else {TRUE ~ as.numeric(NA)}
}
convert_Y_one(c("Y", "N"))
NA_real_
convert_Y_one <- function(x) {
if (x == "Y") {
return(1)
} else if (x == "N") {
return(0)
} else {
return(as.numeric(NA))
}
}
Physaria_MergedData <- read_csv("./data/Physaria_MergedData_20240703.csv", na = c("", "NA", "N/A", "DNR"))%>%
mutate(stemDia.1 = choose_big_number(stemDia.1), stemLength.1 = choose_big_number(stemLength.1))%>%
mutate(flwrBud.1 = convert_Y_one(flwrBud.1))
convert_Y_one <- function(x) {
case_when(
x == "Y" ~ 1,
x == "N" ~ 0,
TRUE ~ NA_real_
)
}
Physaria_MergedData <- read_csv("./data/Physaria_MergedData_20240703.csv", na = c("", "NA", "N/A", "DNR"))%>%
mutate(stemDia.1 = choose_big_number(stemDia.1), stemLength.1 = choose_big_number(stemLength.1))%>%
mutate(flwrBud.1 = convert_Y_one(flwrBud.1))
colnames(Physaria_MergedData)
str(Physaria_MergedData)
uni_colnames <- unique(str_split_i(colnames(Physaria_MergedData), "[.]", 1))[16:30]
uni_colnames
sapply(uni_colnames, function(x){select(Physaria_MergedData, matches(x)) %>% str()})
choose_big_number <- function(x){
x <- as.character(x)
x_splited <- str_split(str_remove_all(x, " "), "/")
x_big <- lapply(x_splited, function(x){x = as.numeric(x); x = sort(x, decreasing = TRUE, na.last = TRUE); return(x[[1]])})
return(unlist(x_big))
}
convert_Y_one <- function(x) {
case_when(
x == "Y" ~ 1,
x == "N" ~ 0,
TRUE ~ NA_real_
)
}
Physaria_MergedData <- read_csv("./data/Physaria_MergedData_20240703.csv", na = c("", "NA", "N/A", "DNR"))%>%
mutate(stemDia.1 = choose_big_number(stemDia.1), stemLength.1 = choose_big_number(stemLength.1))%>%
mutate_at(.vars = c("flwrBud.1", "flwrBud.2", "flwrOpen.1", "flwrOpen.2", "fruitPres.1", "fruitPres.2", "fruitPres.3", "fruitPres.4", "fruitDeh.1", "fruitDeh.2", "fruitDeh.3", "fruitDeh.4"), flwrBud.1 = convert_Y_one(flwrBud.1))
Physaria_MergedData <- read_csv("./data/Physaria_MergedData_20240703.csv", na = c("", "NA", "N/A", "DNR"))%>%
mutate(stemDia.1 = choose_big_number(stemDia.1), stemLength.1 = choose_big_number(stemLength.1))%>%
mutate_at(.vars = c("flwrBud.1", "flwrBud.2", "flwrOpen.1", "flwrOpen.2", "fruitPres.1", "fruitPres.2", "fruitPres.3", "fruitPres.4", "fruitDeh.1", "fruitDeh.2", "fruitDeh.3", "fruitDeh.4"), flwrBud.1 = convert_Y_one(flwrBud.1))
?mutate_at
Physaria_MergedData <- read_csv("./data/Physaria_MergedData_20240703.csv", na = c("", "NA", "N/A", "DNR"))%>%
mutate(stemDia.1 = choose_big_number(stemDia.1), stemLength.1 = choose_big_number(stemLength.1))%>%
mutate_at(.vars = matches("flwrBud.1", "flwrBud.2", "flwrOpen.1", "flwrOpen.2", "fruitPres.1", "fruitPres.2", "fruitPres.3", "fruitPres.4", "fruitDeh.1", "fruitDeh.2", "fruitDeh.3", "fruitDeh.4"), flwrBud.1 = convert_Y_one(flwrBud.1))
Physaria_MergedData <- read_csv("./data/Physaria_MergedData_20240703.csv", na = c("", "NA", "N/A", "DNR"))%>%
mutate(stemDia.1 = choose_big_number(stemDia.1), stemLength.1 = choose_big_number(stemLength.1))%>%
mutate_at(.vars = where("flwrBud.1", "flwrBud.2", "flwrOpen.1", "flwrOpen.2", "fruitPres.1", "fruitPres.2", "fruitPres.3", "fruitPres.4", "fruitDeh.1", "fruitDeh.2", "fruitDeh.3", "fruitDeh.4"), flwrBud.1 = convert_Y_one(flwrBud.1))
Physaria_MergedData <- read_csv("./data/Physaria_MergedData_20240703.csv", na = c("", "NA", "N/A", "DNR"))%>%
mutate(stemDia.1 = choose_big_number(stemDia.1), stemLength.1 = choose_big_number(stemLength.1))%>%
mutate_at(.vars = all_of("flwrBud.1", "flwrBud.2", "flwrOpen.1", "flwrOpen.2", "fruitPres.1", "fruitPres.2", "fruitPres.3", "fruitPres.4", "fruitDeh.1", "fruitDeh.2", "fruitDeh.3", "fruitDeh.4"), flwrBud.1 = convert_Y_one(flwrBud.1))
Physaria_MergedData <- read_csv("./data/Physaria_MergedData_20240703.csv", na = c("", "NA", "N/A", "DNR"))%>%
mutate(stemDia.1 = choose_big_number(stemDia.1), stemLength.1 = choose_big_number(stemLength.1))%>%
mutate_at(.vars = all_of(c("flwrBud.1", "flwrBud.2", "flwrOpen.1", "flwrOpen.2", "fruitPres.1", "fruitPres.2", "fruitPres.3", "fruitPres.4", "fruitDeh.1", "fruitDeh.2", "fruitDeh.3", "fruitDeh.4")), flwrBud.1 = convert_Y_one(flwrBud.1))
Physaria_MergedData <- read_csv("./data/Physaria_MergedData_20240703.csv", na = c("", "NA", "N/A", "DNR"))%>%
mutate(stemDia.1 = choose_big_number(stemDia.1), stemLength.1 = choose_big_number(stemLength.1))%>%
mutate_at(.vars = all_of(c("flwrBud.1", "flwrBud.2", "flwrOpen.1", "flwrOpen.2", "fruitPres.1", "fruitPres.2", "fruitPres.3", "fruitPres.4", "fruitDeh.1", "fruitDeh.2", "fruitDeh.3", "fruitDeh.4")), .funs = "convert_Y_one")
colnames(Physaria_MergedData)
str(Physaria_MergedData)
uni_colnames <- unique(str_split_i(colnames(Physaria_MergedData), "[.]", 1))[16:30]
uni_colnames
sapply(uni_colnames, function(x){select(Physaria_MergedData, matches(x)) %>% str()})
date_info <- Physaria_MergedData %>%
select(str_c("Date.", 1:15))%>% # add something
.[1,]%>%
pivot_longer(cols = starts_with("Date"), names_to = "Date_index", values_to = "Date")%>%
mutate(Date_index = str_remove(Date_index, "Date."))%>%
mutate(Date = str_replace(Date, pattern = "/24$", replacement = "/2024"))
View(date_info)
Physaria_MergedData_l <- Physaria_MergedData %>%
# Select the columns needed
select(TemporaryID, RanIndex,
starts_with("leafLong"), starts_with("leafWide"),
starts_with("numRos"), starts_with("numStem"), starts_with("stemDia"),
starts_with("stemLength"), starts_with("numLeaf"), starts_with("flwrBud"),
starts_with("flwrOpen"), starts_with("fruitPres"), starts_with("fruitDeh"),
starts_with("numFlowerStem")) %>%
# Pivot the data from wide to long format
pivot_longer(cols = c(starts_with("leafLong"), starts_with("leafWide"),
starts_with("Surv"), starts_with("numRos"), starts_with("numStem"),
starts_with("stemDia"), starts_with("stemLength"),
starts_with("numLeaf"), starts_with("flwrBud"),
starts_with("flwrOpen"), starts_with("fruitPres"),
starts_with("fruitDeh"), starts_with("numFlowerStem")),
names_to = c("variable_name", "Date_index"),
names_sep = "[.]",
values_to = "values") %>%
# Join with date_info to get date
left_join(date_info, by = "Date_index") %>%
# Convert the date column to Date format
mutate(Date = as.Date(Date, format = "%m/%d/%Y"))
Physaria_MergedData_l <- Physaria_MergedData %>%
# Select the columns needed
select(TemporaryID, Index,
starts_with("leafLong"), starts_with("leafWide"),
starts_with("numRos"), starts_with("numStem"), starts_with("stemDia"),
starts_with("stemLength"), starts_with("numLeaf"), starts_with("flwrBud"),
starts_with("flwrOpen"), starts_with("fruitPres"), starts_with("fruitDeh"),
starts_with("numFlowerStem")) %>%
# Pivot the data from wide to long format
pivot_longer(cols = c(starts_with("leafLong"), starts_with("leafWide"),
starts_with("Surv"), starts_with("numRos"), starts_with("numStem"),
starts_with("stemDia"), starts_with("stemLength"),
starts_with("numLeaf"), starts_with("flwrBud"),
starts_with("flwrOpen"), starts_with("fruitPres"),
starts_with("fruitDeh"), starts_with("numFlowerStem")),
names_to = c("variable_name", "Date_index"),
names_sep = "[.]",
values_to = "values") %>%
# Join with date_info to get date
left_join(date_info, by = "Date_index") %>%
# Convert the date column to Date format
mutate(Date = as.Date(Date, format = "%m/%d/%Y"))
View(Physaria_MergedData_l)
colnames(Physaria_MergedData)
Physaria_MergedData_l <- Physaria_MergedData %>%
# Select the columns needed
select(Index, TemporaryID, MaternalLine, FlowerHead, State, County, Longitude, Latitude,
starts_with("leafLong"), starts_with("leafWide"),
starts_with("numRos"), starts_with("numStem"), starts_with("stemDia"),
starts_with("stemLength"), starts_with("numLeaf"), starts_with("flwrBud"),
starts_with("flwrOpen"), starts_with("fruitPres"), starts_with("fruitDeh"),
starts_with("numFlowerStem")) %>%
# Pivot the data from wide to long format
pivot_longer(cols = c(starts_with("leafLong"), starts_with("leafWide"),
starts_with("Surv"), starts_with("numRos"), starts_with("numStem"),
starts_with("stemDia"), starts_with("stemLength"),
starts_with("numLeaf"), starts_with("flwrBud"),
starts_with("flwrOpen"), starts_with("fruitPres"),
starts_with("fruitDeh"), starts_with("numFlowerStem")),
names_to = c("variable_name", "Date_index"),
names_sep = "[.]",
values_to = "values") %>%
# Join with date_info to get date
left_join(date_info, by = "Date_index") %>%
# Convert the date column to Date format
mutate(Date = as.Date(Date, format = "%m/%d/%Y"))
library(tidyverse)
setwd("/Users/kuowenhsi/Library/CloudStorage/OneDrive-WashingtonUniversityinSt.Louis/MOBOT/MOBOT_Physaria")
choose_big_number <- function(x){
x <- as.character(x)
x_splited <- str_split(str_remove_all(x, " "), "/")
x_big <- lapply(x_splited, function(x){x = as.numeric(x); x = sort(x, decreasing = TRUE, na.last = TRUE); return(x[[1]])})
return(unlist(x_big))
}
convert_Y_one <- function(x) {
case_when(
x == "Y" ~ 1,
x == "N" ~ 0,
TRUE ~ NA_real_
)
}
Physaria_MergedData <- read_csv("./data/Physaria_MergedData_20240703.csv", na = c("", "NA", "N/A", "DNR"))%>%
mutate(stemDia.1 = choose_big_number(stemDia.1), stemLength.1 = choose_big_number(stemLength.1))%>%
mutate_at(.vars = all_of(c("flwrBud.1", "flwrBud.2", "flwrOpen.1", "flwrOpen.2", "fruitPres.1", "fruitPres.2", "fruitPres.3", "fruitPres.4", "fruitDeh.1", "fruitDeh.2", "fruitDeh.3", "fruitDeh.4")), .funs = "convert_Y_one")
colnames(Physaria_MergedData)
str(Physaria_MergedData)
## check data class
# print unique column names
uni_colnames <- unique(str_split_i(colnames(Physaria_MergedData), "[.]", 1))[16:30]
uni_colnames
sapply(uni_colnames, function(x){select(Physaria_MergedData, matches(x)) %>% str()})
date_info <- Physaria_MergedData %>%
select(str_c("Date.", 1:15))%>% # add something
.[1,]%>%
pivot_longer(cols = starts_with("Date"), names_to = "Date_index", values_to = "Date")%>%
mutate(Date_index = str_remove(Date_index, "Date."))%>%
mutate(Date = str_replace(Date, pattern = "/24$", replacement = "/2024"))
Physaria_MergedData_l <- Physaria_MergedData %>%
# Select the columns needed
select(Index, TemporaryID, MaternalLine, FlowerHead, State, County, Longitude, Latitude,
starts_with("leafLong"), starts_with("leafWide"),
starts_with("numRos"), starts_with("numStem"), starts_with("stemDia"),
starts_with("stemLength"), starts_with("numLeaf"), starts_with("flwrBud"),
starts_with("flwrOpen"), starts_with("fruitPres"), starts_with("fruitDeh"),
starts_with("numFlowerStem")) %>%
# Pivot the data from wide to long format
pivot_longer(cols = c(starts_with("leafLong"), starts_with("leafWide"),
starts_with("Surv"), starts_with("numRos"), starts_with("numStem"),
starts_with("stemDia"), starts_with("stemLength"),
starts_with("numLeaf"), starts_with("flwrBud"),
starts_with("flwrOpen"), starts_with("fruitPres"),
starts_with("fruitDeh"), starts_with("numFlowerStem")),
names_to = c("variable_name", "Date_index"),
names_sep = "[.]",
values_to = "values") %>%
# Join with date_info to get date
left_join(date_info, by = "Date_index") %>%
# Convert the date column to Date format
mutate(Date = as.Date(Date, format = "%m/%d/%Y"))
write_csv(Physaria_MergedData_l, "./data/Physaria_MergedData_tidy_20240703.csv")
write_xlsx(Physaria_MergedData_l, "./data/Physaria_MergedData_tidy_20240703.xlsx")
View(Physaria_MergedData)
Physaria_MergedData_l <- Physaria_MergedData %>%
# Select the columns needed
select(Index, TemporaryID, MaternalLine, FlowerHead, State, County, Longitude, Latitude,
starts_with("leafLong"), starts_with("leafWide"),
starts_with("numRos"), starts_with("numStem"), starts_with("stemDia"),
starts_with("stemLength"), starts_with("numLeaf"), starts_with("flwrBud"),
starts_with("flwrOpen"), starts_with("fruitPres"), starts_with("fruitDeh"),
starts_with("numFlowerStem"), starts_with("leafArea")) %>%
# Pivot the data from wide to long format
pivot_longer(cols = c(starts_with("leafLong"), starts_with("leafWide"),
starts_with("Surv"), starts_with("numRos"), starts_with("numStem"),
starts_with("stemDia"), starts_with("stemLength"),
starts_with("numLeaf"), starts_with("flwrBud"),
starts_with("flwrOpen"), starts_with("fruitPres"),
starts_with("fruitDeh"), starts_with("numFlowerStem"), starts_with("leafArea")),
names_to = c("variable_name", "Date_index"),
names_sep = "[.]",
values_to = "values") %>%
# Join with date_info to get date
left_join(date_info, by = "Date_index") %>%
# Convert the date column to Date format
mutate(Date = as.Date(Date, format = "%m/%d/%Y"))
View(Physaria_MergedData_l)
library(tidyverse)
setwd("/Users/kuowenhsi/Library/CloudStorage/OneDrive-WashingtonUniversityinSt.Louis/MOBOT/MOBOT_Physaria")
choose_big_number <- function(x){
x <- as.character(x)
x_splited <- str_split(str_remove_all(x, " "), "/")
x_big <- lapply(x_splited, function(x){x = as.numeric(x); x = sort(x, decreasing = TRUE, na.last = TRUE); return(x[[1]])})
return(unlist(x_big))
}
convert_Y_one <- function(x) {
case_when(
x == "Y" ~ 1,
x == "N" ~ 0,
TRUE ~ NA_real_
)
}
Physaria_MergedData <- read_csv("./data/Physaria_MergedData_20240703.csv", na = c("", "NA", "N/A", "DNR"))%>%
mutate(stemDia.1 = choose_big_number(stemDia.1), stemLength.1 = choose_big_number(stemLength.1))%>%
mutate_at(.vars = all_of(c("flwrBud.1", "flwrBud.2", "flwrOpen.1", "flwrOpen.2", "fruitPres.1", "fruitPres.2", "fruitPres.3", "fruitPres.4", "fruitDeh.1", "fruitDeh.2", "fruitDeh.3", "fruitDeh.4")), .funs = "convert_Y_one")
colnames(Physaria_MergedData)
str(Physaria_MergedData)
## check data class
# print unique column names
uni_colnames <- unique(str_split_i(colnames(Physaria_MergedData), "[.]", 1))[16:30]
uni_colnames
sapply(uni_colnames, function(x){select(Physaria_MergedData, matches(x)) %>% str()})
date_info <- Physaria_MergedData %>%
select(str_c("Date.", 1:15))%>% # add something
.[1,]%>%
pivot_longer(cols = starts_with("Date"), names_to = "Date_index", values_to = "Date")%>%
mutate(Date_index = str_remove(Date_index, "Date."))%>%
mutate(Date = str_replace(Date, pattern = "/24$", replacement = "/2024"))
Physaria_MergedData_l <- Physaria_MergedData %>%
# Select the columns needed
select(Index, TemporaryID, MaternalLine, FlowerHead, State, County, Longitude, Latitude,
starts_with("leafLong"), starts_with("leafWide"),
starts_with("numRos"), starts_with("numStem"), starts_with("stemDia"),
starts_with("stemLength"), starts_with("numLeaf"), starts_with("flwrBud"),
starts_with("flwrOpen"), starts_with("fruitPres"), starts_with("fruitDeh"),
starts_with("numFlowerStem"), starts_with("leafArea")) %>%
# Pivot the data from wide to long format
pivot_longer(cols = c(starts_with("leafLong"), starts_with("leafWide"),
starts_with("Surv"), starts_with("numRos"), starts_with("numStem"),
starts_with("stemDia"), starts_with("stemLength"),
starts_with("numLeaf"), starts_with("flwrBud"),
starts_with("flwrOpen"), starts_with("fruitPres"),
starts_with("fruitDeh"), starts_with("numFlowerStem"), starts_with("leafArea")),
names_to = c("variable_name", "Date_index"),
names_sep = "[.]",
values_to = "values") %>%
# Join with date_info to get date
left_join(date_info, by = "Date_index") %>%
# Convert the date column to Date format
mutate(Date = as.Date(Date, format = "%m/%d/%Y"))
write_csv(Physaria_MergedData_l, "./data/Physaria_MergedData_tidy_20240703.csv")
write_xlsx(Physaria_MergedData_l, "./data/Physaria_MergedData_tidy_20240703.xlsx")
Physaria_MergedData_l <- Physaria_MergedData %>%
# Select the columns needed
select(Index, TemporaryID, MaternalLine, FlowerHead, State, County, Longitude, Latitude,
starts_with("leafLong"), starts_with("leafWide"),
starts_with("numRos"), starts_with("numStem"), starts_with("stemDia"),
starts_with("stemLength"), starts_with("numLeaf"), starts_with("flwrBud"),
starts_with("flwrOpen"), starts_with("fruitPres"), starts_with("fruitDeh"),
starts_with("numFlowerStem"), starts_with("leafArea")) %>%
# Pivot the data from wide to long format
pivot_longer(cols = starts_with(uni_colnames),
names_to = c("variable_name", "Date_index"),
names_sep = "[.]",
values_to = "values") %>%
# Join with date_info to get date
left_join(date_info, by = "Date_index") %>%
# Convert the date column to Date format
mutate(Date = as.Date(Date, format = "%m/%d/%Y"))
Physaria_MergedData_l <- Physaria_MergedData %>%
# Select the columns needed
select(Index, TemporaryID, MaternalLine, FlowerHead, State, County, Longitude, Latitude, starts_with(uni_colnames)) %>%
# Pivot the data from wide to long format
pivot_longer(cols = starts_with(uni_colnames),
names_to = c("variable_name", "Date_index"),
names_sep = "[.]",
values_to = "values") %>%
# Join with date_info to get date
left_join(date_info, by = "Date_index") %>%
# Convert the date column to Date format
mutate(Date = as.Date(Date, format = "%m/%d/%Y"))
uni_colnames
Physaria_MergedData_l <- Physaria_MergedData %>%
# Select the columns needed
select(Index, TemporaryID, MaternalLine, FlowerHead, State, County, Longitude, Latitude, starts_with(uni_colnames[3:15])) %>%
# Pivot the data from wide to long format
pivot_longer(cols = starts_with(uni_colnames[3:15]),
names_to = c("variable_name", "Date_index"),
names_sep = "[.]",
values_to = "values") %>%
# Join with date_info to get date
left_join(date_info, by = "Date_index") %>%
# Convert the date column to Date format
mutate(Date = as.Date(Date, format = "%m/%d/%Y"))
View(Physaria_MergedData_l)
library(tidyverse)
setwd("/Users/kuowenhsi/Library/CloudStorage/OneDrive-WashingtonUniversityinSt.Louis/MOBOT/MOBOT_Physaria")
choose_big_number <- function(x){
x <- as.character(x)
x_splited <- str_split(str_remove_all(x, " "), "/")
x_big <- lapply(x_splited, function(x){x = as.numeric(x); x = sort(x, decreasing = TRUE, na.last = TRUE); return(x[[1]])})
return(unlist(x_big))
}
convert_Y_one <- function(x) {
case_when(
x == "Y" ~ 1,
x == "N" ~ 0,
TRUE ~ NA_real_
)
}
Physaria_MergedData <- read_csv("./data/Physaria_MergedData_20240703.csv", na = c("", "NA", "N/A", "DNR"))%>%
mutate(stemDia.1 = choose_big_number(stemDia.1), stemLength.1 = choose_big_number(stemLength.1))%>%
mutate_at(.vars = all_of(c("flwrBud.1", "flwrBud.2", "flwrOpen.1", "flwrOpen.2", "fruitPres.1", "fruitPres.2", "fruitPres.3", "fruitPres.4", "fruitDeh.1", "fruitDeh.2", "fruitDeh.3", "fruitDeh.4")), .funs = "convert_Y_one")
colnames(Physaria_MergedData)
str(Physaria_MergedData)
## check data class
# print unique column names
uni_colnames <- unique(str_split_i(colnames(Physaria_MergedData), "[.]", 1))[16:30]
uni_colnames
sapply(uni_colnames, function(x){select(Physaria_MergedData, matches(x)) %>% str()})
date_info <- Physaria_MergedData %>%
select(str_c("Date.", 1:15))%>% # add something
.[1,]%>%
pivot_longer(cols = starts_with("Date"), names_to = "Date_index", values_to = "Date")%>%
mutate(Date_index = str_remove(Date_index, "Date."))%>%
mutate(Date = str_replace(Date, pattern = "/24$", replacement = "/2024"))
Physaria_MergedData_l <- Physaria_MergedData %>%
# Select the columns needed
select(Index, TemporaryID, MaternalLine, FlowerHead, State, County, Longitude, Latitude, starts_with(uni_colnames[3:15])) %>%
# Pivot the data from wide to long format
pivot_longer(cols = starts_with(uni_colnames[3:15]),
names_to = c("variable_name", "Date_index"),
names_sep = "[.]",
values_to = "values") %>%
# Join with date_info to get date
left_join(date_info, by = "Date_index") %>%
# Convert the date column to Date format
mutate(Date = as.Date(Date, format = "%m/%d/%Y"))
write_csv(Physaria_MergedData_l, "./data/Physaria_MergedData_tidy_20240703.csv")
write_xlsx(Physaria_MergedData_l, "./data/Physaria_MergedData_tidy_20240703.xlsx")
unique(Physaria_MergedData_l$variable_name)
write_csv(Physaria_MergedData_l, "./data/Physaria_MergedData_tidy_20240703.csv")
write_xlsx(Physaria_MergedData_l, "./data/Physaria_MergedData_tidy_20240703.xlsx")
